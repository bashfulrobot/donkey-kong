---
# Slack installation using known working direct URL 
- name: Check if Slack is already installed
  command: dpkg -l slack-desktop
  register: slack_check
  failed_when: false
  changed_when: false

- name: DEBUG - Log Slack check result
  debug:
    msg: "Slack check result: rc={{ slack_check.rc }}, package_state={{ package_state }}"

- name: Slack installation block
  block:
    - name: Create temporary directory for Slack installation
      tempfile:
        state: directory
        suffix: slack
      register: slack_temp_dir

    - name: Scrape Slack downloads page to get version number
      command: >
        curl -s -A "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
        "https://slack.com/intl/en-gb/downloads/linux"
      register: slack_page_html
      tags:
        - downloads
        - slow
        - never

    - name: Extract Slack version number from HTML
      set_fact:
        slack_version: "{{ slack_page_html.stdout | regex_search('Version ([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
      tags:
        - downloads
        - slow
        - never

    - name: DEBUG - Log scraped Slack version
      debug:
        msg: "Scraped Slack version: {{ slack_version }}"
      tags:
        - downloads
        - slow
        - never

    - name: Construct direct download URL using scraped version
      set_fact:
        slack_download_url: "https://downloads.slack-edge.com/desktop-releases/linux/x64/{{ slack_version }}/slack-desktop-{{ slack_version }}-amd64.deb"
      when: slack_version is defined and slack_version != ""
      tags:
        - downloads
        - slow
        - never

    - name: DEBUG - Log constructed download URL
      debug:
        msg: "Constructed Slack download URL: {{ slack_download_url }}"
      tags:
        - downloads
        - slow
        - never

    - name: Download Slack deb package using curl with full browser simulation
      command: >
        curl -L -o "{{ slack_temp_dir.path }}/slack-desktop-amd64.deb"
        -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
        -H "Referer: https://slack.com/downloads/linux"
        -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"
        -H "Accept-Language: en-US,en;q=0.5"
        -H "Accept-Encoding: gzip, deflate, br"
        -H "DNT: 1"
        -H "Connection: keep-alive"
        -H "Upgrade-Insecure-Requests: 1"
        "{{ slack_download_url }}"
      register: slack_download
      failed_when: false
      when: slack_download_url is defined and slack_download_url != ""
      tags:
        - downloads
        - slow
        - never

    - name: Fallback - try known working older version if latest fails
      command: >
        curl -L -o "{{ slack_temp_dir.path }}/slack-desktop-amd64.deb"
        -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
        -H "Referer: https://slack.com/downloads/linux"
        "https://downloads.slack-edge.com/desktop-releases/linux/x64/4.40.126/slack-desktop-4.40.126-amd64.deb"
      register: slack_download_fallback
      failed_when: false
      when: 
        - slack_download.rc != 0
      tags:
        - downloads
        - slow
        - never

    - name: DEBUG - Log download result
      debug:
        var: slack_download
      tags:
        - downloads
        - slow
        - never

    - name: DEBUG - Log fallback download result
      debug:
        var: slack_download_fallback
      when: slack_download_fallback is defined
      tags:
        - downloads
        - slow
        - never

    - name: Install Slack deb package with dpkg
      command: dpkg -i "{{ slack_temp_dir.path }}/slack-desktop-amd64.deb"
      become: yes
      register: dpkg_result
      failed_when: false
      when: (slack_download.rc == 0) or (slack_download_fallback.rc == 0 if slack_download_fallback is defined else false)

    - name: DEBUG - Log dpkg result  
      debug:
        var: dpkg_result
      when: dpkg_result is defined

    - name: Fix broken dependencies if dpkg installation failed
      command: apt-get install -f -y
      become: yes
      register: apt_fix_result
      when: 
        - dpkg_result is defined
        - dpkg_result.rc != 0

    - name: Clean up temporary directory
      file:
        path: "{{ slack_temp_dir.path }}"
        state: absent
      when: slack_temp_dir.path is defined

  when: 
    - package_state == 'present'
    - slack_check.rc != 0

- name: Remove Slack
  apt:
    name: slack-desktop
    state: absent
  become: yes
  when: package_state == 'absent'

- name: Verify Slack installation
  command: dpkg -l slack-desktop
  register: slack_verify
  failed_when: false
  changed_when: false
  when: package_state == 'present'

- name: DEBUG - Log final verification
  debug:
    var: slack_verify
  when: package_state == 'present'